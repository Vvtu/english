{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tf","window","model","sequential","add","layers","dense","units","inputShape","compile","loss","optimizer","xs","tensor2d","ys","fit","epochs","then","predict","print","App","className","src","logo","alt","onClick","console","log","navigator","share","title","text","url","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAAe,G,KAAA,IAA0B,kCCKnCA,G,MAAKC,OAAOD,IAGZE,EAAQF,EAAGG,aACjBD,EAAME,IAAIJ,EAAGK,OAAOC,MAAM,CAAEC,MAAO,EAAGC,WAAY,CAAC,MAEnDN,EAAMO,QAAQ,CAAEC,KAAM,mBAAoBC,UAAW,QAGrD,IAAMC,EAAKZ,EAAGa,SAAS,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IACnCC,EAAKd,EAAGa,SAAS,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IAGzCX,EAAMa,IAAIH,EAAIE,EAAI,CAAEE,OAAQ,KAAMC,MAAK,WAErCf,EAAMgB,QAAQlB,EAAGa,SAAS,CAAC,GAAI,CAAC,EAAG,KAAKM,WAuC3BC,MAnCf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,qBACEH,UAAU,WACVI,QAAS,WACPC,QAAQC,IAAI,oBAORC,UAAUC,MACZD,UACGC,MARQ,CACXC,MAAO,UACPC,KAAM,qBACNC,IAAK,qBAMFf,MAAK,kBAAMS,QAAQC,IAAI,uBACvBM,OAAM,SAACC,GAAD,OAAWR,QAAQC,IAAI,gBAAiBO,MAEjDR,QAAQC,IAAI,8BAhBlB,+BClBOQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b79d67bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//@ts-ignore\nconst tf = window.tf;\n\n// Define a model for linear regression.\nconst model = tf.sequential();\nmodel.add(tf.layers.dense({ units: 1, inputShape: [1] }));\n\nmodel.compile({ loss: 'meanSquaredError', optimizer: 'sgd' });\n\n// Generate some synthetic data for training.\nconst xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\nconst ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\n\n// Train the model using the data.\nmodel.fit(xs, ys, { epochs: 10 }).then(() => {\n  // Use the model to do inference on a data point the model hasn't seen before:\n  model.predict(tf.tensor2d([5], [1, 1])).print();\n  // Open the browser devtools to see the output\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <div\n          className=\"App-link\"\n          onClick={() => {\n            console.log('shareRet prep = ');\n            const data = {\n              title: 'web.dev',\n              text: 'Check out web.dev.',\n              url: 'https://web.dev/',\n            };\n\n            if (navigator.share) {\n              navigator\n                .share(data)\n                .then(() => console.log('Successful share'))\n                .catch((error) => console.log('Error sharing', error));\n            } else {\n              console.log('navigator.share not found');\n            }\n          }}\n        >\n          Learn React\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}